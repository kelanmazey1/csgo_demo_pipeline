version: "3.6"
services:
  # Start rabbitmq
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 5
  get_matches:
    image: get_matches
    build: ./get_matches
    depends_on:
      - rabbitmq
    restart: on-failure
    links:
      - rabbitmq
  scraper1:
    image: scrape_match
    build: ./scrape_match
    depends_on:
      - rabbitmq
    restart: on-failure
    links:
      - rabbitmq
    command: python3 listen.py --work_number 1
  scraper2:
    image: scrape_match
    build: ./scrape_match
    depends_on:
      - rabbitmq
    restart: on-failure
    links:
      - rabbitmq
    command: python3 listen.py --work_number 2


networks:
  default:
    driver: bridge
  

  # Start 2 Match detail scrapers, as match page scraping is slow,
  # which take from match queue and send to download queue

  # Download and unzip from download queue

  # Process demo and load to storage