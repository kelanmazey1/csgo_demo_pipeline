{"version":3,"file":"static/js/231.54b26c2a.chunk.js","mappings":"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","sources":["../../core/src/hooks/useSelectionReducer.ts","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/runs/AssetKeyTagCollection.tsx","../../core/src/runs/DeletionDialog.tsx","../../core/src/runs/NavigationBlock.tsx","../../core/src/hooks/useOnBeforeUnload.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/runs/ReexecutionDialog.tsx","../../core/src/runs/RunActionsMenu.tsx","../../core/src/runs/RunCreatedByCell.tsx","../../core/src/runs/RunTable.tsx","../../core/src/runs/TerminationDialog.tsx","../../core/src/runs/useJobAvailabilityErrorForRun.tsx","../../core/src/workspace/useRepositoryForRun.ts","../../ui/src/components/PageHeader.tsx"],"sourcesContent":["import React from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allIds.slice(start, end! + 1).forEach((id) => {\n        checked ? copy.add(id) : copy.delete(id);\n      });\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Table,\n  Tag,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey, tokenForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\n\nconst MAX_ASSET_TAGS = 3;\n\nexport const AssetKeyTagCollection: React.FC<{\n  assetKeys: AssetKey[] | null;\n  modalTitle?: string;\n  useTags?: boolean;\n}> = React.memo(({assetKeys, useTags, modalTitle = 'Assets in Run'}) => {\n  const [showMore, setShowMore] = React.useState(false);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  const assetCount = assetKeys.length;\n  const displayed = assetCount <= MAX_ASSET_TAGS ? assetKeys : [];\n  const hidden = assetCount - displayed.length;\n\n  const showMoreDialog =\n    hidden > 0 ? (\n      <Dialog\n        title={modalTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', maxWidth: '80vw', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        {showMore ? (\n          <Box\n            padding={{bottom: 12}}\n            border={{side: 'bottom', color: Colors.KeylineGray, width: 1}}\n            style={{overflowY: 'auto'}}\n            background={Colors.White}\n          >\n            <Table>\n              <thead>\n                <tr>\n                  <th>Asset key</th>\n                </tr>\n              </thead>\n              <tbody>\n                {assetKeys.map((assetKey, ii) => (\n                  <tr key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n                    <td>\n                      <Link to={assetDetailsPathForKey(assetKey)} key={tokenForAssetKey(assetKey)}>\n                        {displayNameForAssetKey(assetKey)}\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Box>\n        ) : null}\n        <DialogFooter>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  if (useTags) {\n    return (\n      <>\n        {displayed.map((assetKey, ii) => (\n          <Link to={assetDetailsPathForKey(assetKey)} key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          </Link>\n        ))}\n        {hidden > 0 && (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Tag intent=\"none\" icon=\"asset\">\n              {hidden} assets\n            </Tag>\n          </ButtonLink>\n        )}\n        {showMoreDialog}\n      </>\n    );\n  }\n\n  return (\n    <Box flex={{direction: 'row', gap: 8}}>\n      <Icon color={Colors.Gray400} name=\"asset\" size={16} style={{marginTop: 2}} />\n      <Box style={{flex: 1}} flex={{wrap: 'wrap', display: 'inline-flex'}}>\n        {displayed.map((assetKey, idx) => (\n          <Link\n            to={assetDetailsPathForKey(assetKey)}\n            key={tokenForAssetKey(assetKey)}\n            style={{marginRight: 4}}\n          >\n            {`${displayNameForAssetKey(assetKey)}${idx < displayed.length - 1 ? ',' : ''}`}\n          </Link>\n        ))}\n\n        {hidden > 0 && displayed.length > 0 ? (\n          <ButtonLink onClick={() => setShowMore(true)}>{` + ${hidden} more`}</ButtonLink>\n        ) : hidden > 0 ? (\n          <ButtonLink onClick={() => setShowMore(true)}>{`${hidden} assets`}</ButtonLink>\n        ) : undefined}\n      </Box>\n      {showMoreDialog}\n    </Box>\n  );\n});\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport {useOnBeforeUnload} from '../hooks/useOnBeforeUnload';\n\ninterface Props {\n  message: string;\n}\n\nexport const NavigationBlock = (props: Props) => {\n  useOnBeforeUnload();\n  return <Prompt message={props.message} />;\n};\n","import * as React from 'react';\n\nexport const useOnBeforeUnload = () => {\n  React.useEffect(() => {\n    const handler = (e: BeforeUnloadEvent) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, []);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStats.types';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED' || status === 'CANCELING') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {Box, CaptionMono, Colors, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RunStatusIndicator} from './RunStatusDots';\n\nconst statusToIntent = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.CANCELED:\n    case RunStatus.MANAGED:\n      return 'none';\n    case RunStatus.SUCCESS:\n      return 'success';\n    case RunStatus.FAILURE:\n      return 'danger';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n    case RunStatus.CANCELING:\n      return 'primary';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nconst runStatusToString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Success';\n    case RunStatus.STARTING:\n      return 'Starting';\n    case RunStatus.NOT_STARTED:\n      return 'Not started';\n    case RunStatus.FAILURE:\n      return 'Failure';\n    case RunStatus.STARTED:\n      return 'Started';\n    case RunStatus.MANAGED:\n      return 'Managed';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const runStatusToBackfillStateString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n      return 'In progress';\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Completed';\n    case RunStatus.MANAGED:\n    case RunStatus.NOT_STARTED:\n      return 'Missing';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  STARTING: Colors.Blue500,\n  CANCELING: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELED: Colors.Gray400,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusTag = (props: {status: RunStatus}) => {\n  const {status} = props;\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <div>{runStatusToString(status)}</div>\n      </Box>\n    </Tag>\n  );\n};\n\nexport const RunStatusTagWithID = ({runId, status}: {runId: string; status: RunStatus}) => {\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <CaptionMono>{runId.slice(0, 8)}</CaptionMono>\n      </Box>\n    </Tag>\n  );\n};\n\ninterface Props {\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position=\"bottom-left\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ReexecutionStrategy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery, useMutation} from '@apollo/client';\nimport {\n  Button,\n  Icon,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Menu,\n  Popover,\n  Tooltip,\n  DialogFooter,\n  Dialog,\n  StyledReadOnlyCodeMirror,\n  JoinedButtons,\n  DialogBody,\n  Box,\n  Colors,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  RunsQueryRefetchContext,\n  getReexecutionVariables,\n  handleLaunchResult,\n} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\n\nexport const RunActionsMenu: React.FC<{\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}> = React.memo(({run, onAddTag, additionalActionsForRun}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const history = useHistory();\n\n  const copyConfig = useCopyToClipboard();\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION, {\n    onCompleted: refetch,\n  });\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={\n                    run.hasReExecutePermission\n                      ? OPEN_LAUNCHPAD_UNKNOWN\n                      : NO_LAUNCH_PERMISSION_MESSAGE\n                  }\n                  position=\"left\"\n                  disabled={infoReady && run.hasReExecutePermission}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text=\"Open in Launchpad...\"\n                    disabled={!infoReady || !run.hasReExecutePermission}\n                    icon=\"edit\"\n                    to={workspacePathFromRunDetails({\n                      id: run.id,\n                      pipelineName: run.pipelineName,\n                      repositoryName: repoMatch?.match.repository.name,\n                      repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n                      isJob,\n                    })}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      if (repoMatch && runConfigYaml) {\n                        const result = await reexecute({\n                          variables: getReexecutionVariables({\n                            run: {...run, runConfigYaml},\n                            style: {type: 'all'},\n                            repositoryLocationName: repoMatch.match.repositoryLocation.name,\n                            repositoryName: repoMatch.match.repository.name,\n                          }),\n                        });\n                        handleLaunchResult(\n                          run.pipelineName,\n                          result.data?.launchPipelineReexecution,\n                          history,\n                          {\n                            behavior: 'open',\n                          },\n                        );\n                      }\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        title=\"Config\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <StyledReadOnlyCodeMirror\n          value={runConfigYaml || ''}\n          options={{lineNumbers: true, mode: 'yaml'}}\n        />\n        <DialogFooter topBorder>\n          <Button\n            intent=\"none\"\n            onClick={async () => {\n              copyConfig(runConfigYaml || '');\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n});\n\nexport const RunBulkActionsMenu: React.FC<{\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nconst PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.Gray100};\n  color: ${Colors.Gray500};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {Box, Tag} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\n\nimport {DagsterTag} from './RunTag';\nimport {RunTagsFragment} from './types/RunTable.types';\n\ntype Props = {\n  tags: RunTagsFragment[];\n};\n\nexport const RunCreatedByCell = React.memo(({tags}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <RunCreatedByTag tags={tags} />\n    </Box>\n  );\n});\n\nexport const RunCreatedByTag = ({tags}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const user = tags.find((tag) => tag.key === DagsterTag.User);\n  if (user) {\n    return <UserDisplay email={user.value} />;\n  }\n\n  const scheduleTag = tags.find((tag) => tag.key === DagsterTag.ScheduleName);\n  if (scheduleTag) {\n    return <Tag icon=\"schedule\">{scheduleTag.value}</Tag>;\n  }\n\n  const sensorTag = tags.find((tag) => tag.key === DagsterTag.SensorName);\n  if (sensorTag) {\n    return <Tag icon=\"sensors\">{sensorTag.value}</Tag>;\n  }\n\n  const automaterialize = tags.some(\n    (tag) =>\n      tag.key === DagsterTag.Automaterialize ||\n      // Backwards compatibility\n      (tag.key === DagsterTag.CreatedBy && tag.value === 'auto_materialize'),\n  );\n\n  if (automaterialize) {\n    return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n  }\n\n  const autoObserve = tags.some((tag) => tag.key === DagsterTag.AutoObserve);\n  if (autoObserve) {\n    return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n  }\n\n  return <Tag icon=\"account_circle\">Manually launched</Tag>;\n};\n","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Colors,\n  Icon,\n  NonIdealState,\n  Table,\n  Mono,\n  Tag,\n  Button,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  BaseTag,\n  ButtonLink,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {AssetKeyTagCollection} from './AssetKeyTagCollection';\nimport {RunActionsMenu, RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunCreatedByCell} from './RunCreatedByCell';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {\n  assetKeysForRun,\n  RunStateSummary,\n  RunTime,\n  RUN_TIME_FRAGMENT,\n  titleForRun,\n} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>Target</th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n\nconst RunRow: React.FC<{\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}> = ({\n  run,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const targetBackfill = run.tags.find((tag) => tag.key === DagsterTag.Backfill);\n  const targetPartition = run.tags.find((tag) => tag.key === DagsterTag.Partition);\n  const targetPartitionSet = run.tags.find((tag) => tag.key === DagsterTag.PartitionSet);\n  const targetPartitionRangeStart = run.tags.find(\n    (tag) => tag.key === DagsterTag.AssetPartitionRangeStart,\n  );\n  const targetPartitionRangeEnd = run.tags.find(\n    (tag) => tag.key === DagsterTag.AssetPartitionRangeEnd,\n  );\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const tags: TagType[] = [];\n    if (targetBackfill) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        key: targetBackfill.key,\n        value: targetBackfill.value,\n        link,\n      });\n    }\n    if (targetPartition) {\n      tags.push(targetPartition);\n    } else if (targetPartitionSet) {\n      tags.push(targetPartitionSet);\n    } else if (targetPartitionRangeStart !== undefined && targetPartitionRangeEnd !== undefined) {\n      tags.push(targetPartitionRangeStart, targetPartitionRangeEnd);\n    }\n    return tags;\n  }, [\n    run.assetSelection?.length,\n    targetBackfill,\n    targetPartition,\n    targetPartitionRangeEnd,\n    targetPartitionRangeStart,\n    targetPartitionSet,\n  ]);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {canTerminateOrDelete ? (\n        <td>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          {isHiddenAssetGroupJob(run.pipelineName) ? (\n            <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n          ) : (\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <PipelineReference\n                isJob={isJob}\n                showIcon\n                pipelineName={run.pipelineName}\n                pipelineHrefContext=\"no-link\"\n              />\n              <Link\n                to={\n                  repo\n                    ? workspacePipelinePath({\n                        repoName: repo.match.repository.name,\n                        repoLocation: repo.match.repositoryLocation.name,\n                        pipelineName: run.pipelineName,\n                        isJob,\n                      })\n                    : workspacePipelinePathGuessRepo(run.pipelineName)\n                }\n                target=\"_blank\"\n              >\n                <Icon name=\"open_in_new\" color={Colors.Blue500} />\n              </Link>\n            </Box>\n          )}\n          <Box flex={{direction: 'row', gap: 8, wrap: 'wrap'}}>\n            {run.tags.length ? (\n              <Box>\n                <BaseTag\n                  fillColor={Colors.Gray100}\n                  label={\n                    <ButtonLink\n                      onClick={() => {\n                        setShowRunTags(true);\n                      }}\n                    >\n                      {run.tags.length} tag{run.tags.length === 1 ? '' : 's'}\n                    </ButtonLink>\n                  }\n                />\n              </Box>\n            ) : null}\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags\n                  tags={tagsToShow}\n                  mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n                  onAddTag={onAddTag}\n                />\n              ) : null}\n            </RunTagsWrapper>\n          </Box>\n        </Box>\n        {isHovered && run.tags.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <RunCreatedByCell tags={run.tags || []} />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 24}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n          flex={{gap: 8}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TerminateRunPolicy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {TERMINATE_MUTATION} from './RunUtils';\nimport {TerminateMutation, TerminateMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (terminationState: TerminationState) => void;\n  // A map from the run ID to its `canTerminate` value\n  selectedRuns: {[id: string]: boolean};\n}\n\nconst refineToError = (data: TerminateMutation | null | undefined) => {\n  if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n    throw new ErrorEvent('Not an error!');\n  }\n  return data?.terminatePipelineExecution;\n};\n\ntype Error = ReturnType<typeof refineToError> | undefined;\n\nexport type TerminationState = {completed: number; errors: {[id: string]: Error}};\n\ntype TerminationDialogState = {\n  mustForce: boolean;\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'terminating' | 'completed';\n  termination: TerminationState;\n};\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst initializeState = (selectedRuns: SelectedRuns): TerminationDialogState => {\n  return {\n    // If any selected runs have `canTerminate`, we don't necessarily have to force.\n    mustForce: !Object.keys(selectedRuns).some((id) => selectedRuns[id]),\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    termination: {completed: 0, errors: {}},\n  };\n};\n\ntype TerminationDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'toggle-force-terminate'; checked: boolean}\n  | {type: 'start'}\n  | {type: 'termination-success'}\n  | {type: 'termination-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst terminationDialogReducer = (\n  prevState: TerminationDialogState,\n  action: TerminationDialogAction,\n): TerminationDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'toggle-force-terminate':\n      return {...prevState, mustForce: action.checked};\n    case 'start':\n      return {...prevState, step: 'terminating'};\n    case 'termination-success': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {...termination, completed: termination.completed + 1},\n      };\n    }\n    case 'termination-error': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {\n          ...termination,\n          completed: termination.completed + 1,\n          errors: {...termination.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const TerminationDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // terminating. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    terminationDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [terminate] = useMutation<TerminateMutation, TerminateMutationVariables>(\n    TERMINATE_MUTATION,\n  );\n  const policy = state.mustForce\n    ? TerminateRunPolicy.MARK_AS_CANCELED_IMMEDIATELY\n    : TerminateRunPolicy.SAFE_TERMINATE;\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await terminate({variables: {runId, terminatePolicy: policy}});\n\n      if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n        dispatch({type: 'termination-success'});\n      } else {\n        dispatch({type: 'termination-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.termination);\n  };\n\n  const onToggleForce = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'toggle-force-terminate', checked: event.target.checked});\n  };\n\n  const showCheckbox = Object.keys(state.frozenRuns).some((id) => state.frozenRuns[id]);\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for termination.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>\n              {`${count} ${\n                count === 1 ? 'run' : 'runs'\n              } will be terminated. Do you wish to continue?`}\n            </div>\n            <div>\n              {showCheckbox ? (\n                <>\n                  <Checkbox\n                    checked={state.mustForce}\n                    size=\"small\"\n                    label=\"Force termination immediately\"\n                    onChange={onToggleForce}\n                  />\n                  {state.mustForce ? (\n                    <Box flex={{display: 'flex', direction: 'row', gap: 8}} margin={{top: 8}}>\n                      <Icon name=\"warning\" color={Colors.Yellow500} />\n                      <div>\n                        <strong>Warning:</strong> computational resources created by runs may not be\n                        cleaned up.\n                      </div>\n                    </Box>\n                  ) : null}\n                </>\n              ) : (\n                <Group direction=\"row\" spacing={8}>\n                  <Icon name=\"warning\" color={Colors.Yellow500} />\n                  <div>\n                    <strong>Warning:</strong> computational resources created by runs may not be\n                    cleaned up.\n                  </div>\n                </Group>\n              )}\n            </div>\n          </Group>\n        );\n      case 'terminating':\n      case 'completed':\n        const value = count > 0 ? state.termination.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{state.mustForce ? 'Forcing termination…' : 'Terminating…'}</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'terminating' ? (\n              <NavigationBlock message=\"Termination in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`${state.mustForce ? 'Force termination for' : 'Terminate'} ${`${count} ${\n                count === 1 ? 'run' : 'runs'\n              }`}`}\n            </Button>\n          </>\n        );\n      case 'terminating':\n        return (\n          <Button intent=\"danger\" disabled>\n            {state.mustForce\n              ? `Forcing termination for ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`\n              : `Terminating ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'terminating') {\n      return <div>Please do not close the window or navigate away during termination.</div>;\n    }\n\n    const errors = state.termination.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.termination.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {state.mustForce\n                ? `Successfully forced termination for ${successCount}\n                ${successCount === 1 ? 'run' : `runs`}.`\n                : `Successfully requested termination for ${successCount}\n              ${successCount === 1 ? 'run' : `runs`}.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {state.mustForce\n                  ? `Could not force termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`\n                  : `Could not request termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'terminating';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Terminate runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {Group, IconName} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {buildRepoAddress, buildRepoPathForHuman} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {\n  TargetRunWithParentSnapshot,\n  useRepositoryForRunWithParentSnapshot,\n} from '../workspace/useRepositoryForRun';\n\nexport const useJobAvailabilityErrorForRun = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): null | {tooltip?: string | JSX.Element; icon?: IconName; disabled: boolean} => {\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n\n  // The run hasn't loaded, so no error.\n  if (!run) {\n    return null;\n  }\n\n  if (!run.pipelineSnapshotId) {\n    return {\n      icon: 'error',\n      tooltip: `\"${run.pipelineName}\" could not be found.`,\n      disabled: true,\n    };\n  }\n\n  if (repoMatch) {\n    const {type: matchType} = repoMatch;\n\n    // The run matches the repository and active snapshot ID for the job. This is the best\n    // we can do, so consider it safe to run as-is.\n    if (matchType === 'origin-and-snapshot') {\n      return null;\n    }\n\n    // Beyond this point, we're just trying our best. Warn the user that behavior might not be what\n    // they expect.\n\n    if (matchType === 'origin-only') {\n      // Only the repo is a match.\n      return {\n        icon: 'warning',\n        tooltip: `The loaded version of \"${run.pipelineName}\" may be different than the one used for the original run.`,\n        disabled: false,\n      };\n    }\n\n    if (matchType === 'snapshot-only') {\n      // Only the snapshot ID matched, but not the repo.\n      const originRepoName = run.repositoryOrigin\n        ? repoAddressAsHumanString(\n            buildRepoAddress(\n              run.repositoryOrigin.repositoryName,\n              run.repositoryOrigin.repositoryLocationName,\n            ),\n          )\n        : null;\n\n      return {\n        icon: 'warning',\n        tooltip: (\n          <Group direction=\"column\" spacing={4}>\n            <div>{`The original run loaded \"${run.pipelineName}\" from ${\n              originRepoName || 'a different code location'\n            }.`}</div>\n            {originRepoName ? (\n              <div>\n                Original definition in: <strong>{originRepoName}</strong>\n              </div>\n            ) : null}\n          </Group>\n        ),\n        disabled: false,\n      };\n    }\n\n    // Only the job name matched. This could be from any repo in the workspace.\n    return {\n      icon: 'warning',\n      tooltip: `The job \"${run.pipelineName}\" may be a different version from the original pipeline run.`,\n      disabled: false,\n    };\n  }\n\n  // We could not find a repo that contained this job. Inform the user that they should\n  // load the missing repository.\n  const repoForRun = run.repositoryOrigin?.repositoryName;\n  const repoLocationForRun = run.repositoryOrigin?.repositoryLocationName;\n\n  const tooltip = (\n    <Group direction=\"column\" spacing={8}>\n      <div>{`\"${run.pipelineName}\" is not available in your definitions.`}</div>\n      {repoForRun && repoLocationForRun ? (\n        <div>{`Load definitions for ${buildRepoPathForHuman(\n          repoForRun,\n          repoLocationForRun,\n        )} and try again.`}</div>\n      ) : null}\n    </Group>\n  );\n\n  return {\n    icon: 'error',\n    tooltip,\n    disabled: true,\n  };\n};\n","import {DagsterRepoOption, useRepositoryOptions} from './WorkspaceContext';\nimport {findRepoContainingPipeline, repoContainsPipeline} from './findRepoContainingPipeline';\n\ntype MatchType = {\n  match: DagsterRepoOption;\n  type: 'origin' | 'pipeline-name-only';\n};\n\ntype MatchTypeWithSnapshot = {\n  match: DagsterRepoOption;\n  type: 'origin-and-snapshot' | 'origin-only' | 'snapshot-only' | 'pipeline-name-only';\n};\n\nexport interface TargetRunWithParentSnapshot extends TargetRun {\n  parentPipelineSnapshotId?: string | null;\n}\n\ninterface TargetRun {\n  pipelineName: string;\n  repositoryOrigin: null | {\n    repositoryLocationName: string;\n    repositoryName: string;\n  };\n  pipelineSnapshotId: string | null;\n}\n\nconst repoOriginMatchForRun = (options: DagsterRepoOption[], run: TargetRun | null | undefined) => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n  // Try to match the pipeline name within the specified origin, if possible.\n  const origin = run.repositoryOrigin;\n\n  if (!origin) {\n    return null;\n  }\n\n  const location = origin?.repositoryLocationName;\n  const name = origin?.repositoryName;\n\n  const match = options.find(\n    (option) => option.repository.name === name && option.repositoryLocation.name === location,\n  );\n\n  // The origin repo is loaded. Verify that a pipeline with this name exists and return the match if so.\n  return match && repoContainsPipeline(match, pipelineName) ? match : null;\n};\n\nconst jobNameMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRun | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // There is no origin repo. Find any repos that might contain a matching pipeline name.\n  const possibleMatches = findRepoContainingPipeline(options, pipelineName);\n  return possibleMatches.length ? possibleMatches : null;\n};\n\nconst snapshotMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRunWithParentSnapshot | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // When jobs are subsetted (with an opSelection or assetSelection), only their\n  // parentPipelineSnapshotId (the id of the pipelineSnapshot that they were subsetted from) will\n  // be found in the repository, so look for that instead.\n  const snapshotId = run.parentPipelineSnapshotId ?? run.pipelineSnapshotId;\n\n  // Find the repository that contains the specified pipeline name and snapshot ID, if any.\n  if (pipelineName && snapshotId) {\n    const snapshotMatches = findRepoContainingPipeline(options, pipelineName, snapshotId);\n    if (snapshotMatches.length) {\n      return snapshotMatches;\n    }\n  }\n\n  return null;\n};\n\n/**\n * The simple case. Find the repo match for this job name, or the first available\n * repo match for that job name.\n */\nexport const useRepositoryForRunWithoutSnapshot = (\n  run: TargetRun | null | undefined,\n): MatchType | null => {\n  const {options} = useRepositoryOptions();\n  const repoMatch = repoOriginMatchForRun(options, run);\n  if (repoMatch) {\n    return {match: repoMatch, type: 'origin'};\n  }\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n  if (jobNameMatches && jobNameMatches.length) {\n    return {match: jobNameMatches[0]!, type: 'pipeline-name-only'};\n  }\n  return null;\n};\n\n/**\n * The more complex case, where a parent snapshot has been fetched. Here, use a\n * repo match and try to pair it with the snapshot ID. If that fails, use any repo\n * match, then any snapshot ID match, then any job name match.\n *\n * Retrieving a parent snapshot ID is expensive, so this should only be used for\n * one run at a time.\n */\nexport const useRepositoryForRunWithParentSnapshot = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): MatchTypeWithSnapshot | null => {\n  const {options} = useRepositoryOptions();\n\n  const repoMatch = repoOriginMatchForRun(options, run);\n  const snapshotMatches = snapshotMatchesForRun(options, run);\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n\n  if (repoMatch) {\n    if (snapshotMatches) {\n      const repoAndSnapshotMatch = snapshotMatches.find(\n        (repoOption) =>\n          repoOption.repository.name === repoMatch.repository.name &&\n          repoOption.repositoryLocation.name === repoMatch.repositoryLocation.name,\n      );\n      if (repoAndSnapshotMatch) {\n        return {match: repoAndSnapshotMatch, type: 'origin-and-snapshot'};\n      }\n    }\n\n    return {match: repoMatch, type: 'origin-only'};\n  }\n\n  if (snapshotMatches && snapshotMatches[0]) {\n    return {match: snapshotMatches[0], type: 'snapshot-only'};\n  }\n\n  if (jobNameMatches && jobNameMatches[0]) {\n    return {match: jobNameMatches[0], type: 'pipeline-name-only'};\n  }\n\n  return null;\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n"],"names":["reducer","state","action","copy","Set","Array","from","checkedIds","type","_action$payload","payload","checked","id","add","delete","lastCheckedId","_action$payload2","allIds","indexOfLast","indexOf","indexOfChecked","_sort","sort","_sort2","_slicedToArray","start","end","slice","forEach","_action$payload3","initialState","useSelectionReducer","_React$useReducer","React","_React$useReducer2","dispatch","onToggleFactory","values","shiftKey","onToggleAll","useCanSeeConfig","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","_templateObject","_taggedTemplateLiteral","AssetKeyTagCollection","_ref","assetKeys","useTags","_ref$modalTitle","modalTitle","_React$useState","_React$useState2","showMore","setShowMore","length","assetCount","displayed","hidden","showMoreDialog","_jsxs","Dialog","title","onClose","style","minWidth","maxWidth","maxHeight","isOpen","children","_jsx","Box","padding","bottom","border","side","color","Colors","width","overflowY","background","Table","map","assetKey","ii","Link","to","assetDetailsPathForKey","displayNameForAssetKey","tokenForAssetKey","concat","DialogFooter","Button","intent","autoFocus","onClick","undefined","_Fragment","Tag","interactive","icon","ButtonLink","flex","direction","gap","Icon","name","size","marginTop","wrap","display","idx","marginRight","refineToError","deletePipelineRun","__typename","Error","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","_objectSpread","_defineProperty","error","DeletionDialog","props","onComplete","onTerminateInstead","selectedRuns","current","runIDs","Object","keys","count","terminatableCount","filter","_useMutation","useMutation","DELETE_MUTATION","destroy","mutate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","runList","_i","_runList","runId","_yield$destroy","_context","prev","next","variables","sent","stop","apply","arguments","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","value","ProgressBar","Math","max","animate","NavigationBlock","message","progressContent","errorCount","successCount","alignItems","_errors$runId","Mono","completionContent","disabled","buttons","handler","e","preventDefault","returnValue","window","addEventListener","removeEventListener","Prompt","RunStats","stats","RUN_STATS_QUERY","loading","RunStatsDetailsContainer","justifyContent","Spinner","purpose","result","pipelineRunOrError","PythonErrorInfo","runPath","stepsSucceeded","stepsFailed","materializations","expectations","PYTHON_ERROR_FRAGMENT","styled","displayName","componentId","RunStatusWithStats","rest","_objectWithoutProperties","_excluded","Popover","position","interactionKind","content","hoverOpenDelay","RunStatusIndicator","_ref2","status","RunStatusDot","pulse","inProgressStatuses","queuedStatuses","pulseAnimation","keyframes","_ref3","_ref4","_ref5","_ref6","css","_templateObject2","_ref7","RUN_STATUS_COLORS","statusToIntent","RunStatus","assertUnreachable","runStatusToString","runStatusToBackfillStateString","QUEUED","NOT_STARTED","MANAGED","STARTED","STARTING","CANCELING","SUCCESS","FAILURE","CANCELED","SCHEDULED","RunStatusTag","RunStatusTagWithID","CaptionMono","RunStatusTagWithStats","usePortal","launchPipelineReexecution","errorText","reexecution","reexecutionDialogReducer","ReexecutionDialog","reexecutionStrategy","LAUNCH_PIPELINE_REEXECUTION_MUTATION","reexecute","_yield$reexecute","reexecutionParams","parentRunId","strategy","ReexecutionStrategy","RunActionsMenu","_data$pipelineRunOrEr","run","onAddTag","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","history","useHistory","copyConfig","useCopyToClipboard","onCompleted","_useLazyQuery","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","_useLazyQuery2","loadEnv","_useLazyQuery2$","called","closeDialogs","pipelineRun","runConfigYaml","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","isJob","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","JoinedButtons","AnchorButton","Menu","MenuItem","tagName","text","horizontal","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","OPEN_LAUNCHPAD_UNKNOWN","NO_LAUNCH_PERMISSION_MESSAGE","targetTagName","MenuLink","workspacePathFromRunDetails","repositoryName","repository","repositoryLocationName","repositoryLocation","canShow","_result$data","getReexecutionVariables","handleLaunchResult","behavior","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","RunTags","tags","mode","topBorder","StyledReadOnlyCodeMirror","options","lineNumbers","_callee2","_context2","showSharedToaster","RunBulkActionsMenu","selected","clearSelection","_React$useState3","_React$useState4","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","withConfig","RunCreatedByCell","RunCreatedByTag","UserDisplay","useLaunchPadHooks","user","find","tag","key","DagsterTag","email","scheduleTag","sensorTag","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","hideCreatedBy","emptyState","_useSelectionReducer","_useSelectionReducer2","_useSelectionReducer3","canTerminateOrDeleteAny","selectedFragments","has","ActionBar","top","grow","anyFilter","margin","vertical","NonIdealState","description","paddingTop","paddingBottom","Checkbox","indeterminate","onChange","target","HTMLInputElement","additionalColumnHeaders","_props$additionalColu","RunRow","canTerminateOrDelete","additionalColumns","additionalColumnsForRow","call","onToggleChecked","isHighlighted","includes","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","_run$assetSelection2","repo","useRepositoryForRunWithoutSnapshot","pipelines","pipelineOrJob","isReexecution","targetBackfill","targetPartition","targetPartitionSet","targetPartitionRangeStart","targetPartitionRangeEnd","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","_run$assetSelection","link","assetSelection","runsPathWithFilters","token","push","Row","highlighted","onMouseEnter","onMouseLeave","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","isHiddenAssetGroupJob","assetKeysForRun","PipelineReference","showIcon","pipelineHrefContext","workspacePipelinePath","repoName","repoLocation","workspacePipelinePathGuessRepo","BaseTag","fillColor","label","RunTagsWrapper","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStateSummary","left","right","terminatePipelineExecution","ErrorEvent","mustForce","termination","terminationDialogReducer","TERMINATE_MUTATION","terminate","policy","TerminateRunPolicy","_yield$terminate","terminatePolicy","onToggleForce","event","showCheckbox","_run$repositoryOrigin","_run$repositoryOrigin2","matchType","originRepoName","repositoryOrigin","repoAddressAsHumanString","buildRepoAddress","repoForRun","repoLocationForRun","buildRepoPathForHuman","repoOriginMatchForRun","origin","location","option","repoContainsPipeline","jobNameMatchesForRun","possibleMatches","findRepoContainingPipeline","useRepositoryOptions","jobNameMatches","snapshotMatches","_run$parentPipelineSn","snapshotId","snapshotMatchesForRun","repoAndSnapshotMatch","repoOption","PageHeader","tabs","PageHeaderContainer"],"sourceRoot":""}